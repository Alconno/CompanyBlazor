@page "/account"
@using CompanyBlazor5.Server.Encryption
@using CompanyBlazor5.Shared
@inject ILocalStorageService localStorage
@inject HttpClient Http
@inject NavigationManager nav


@if (mainLayout.LoggedIn)
{
	<h3 class="my-4">Account</h3>
	<div class="alert alert-success" role="alert">Logged in as <b>@mainLayout.UserName</b></div>
	<button class="btn btn-danger" @onclick="mainLayout.Logout">Logout</button>
}
else
{
	<div class="alert alert-danger" role="alert">Please Login for access...</div>
	<button type="submit" class="btn btn-success" @onclick="mainLayout.OpenLogin">Login</button>

	<button type="submit" class="btn btn-info" @onclick="registerUser">Register</button>
}
@code {
	[CascadingParameter]
	public MainLayout mainLayout { get; set; }

	[Parameter]
	[SupplyParameterFromQuery]
	public string? Name { get; set; }
	[Parameter]
	[SupplyParameterFromQuery]
	public string? Password { get; set; }

	public async Task registerUser(){
		nav.NavigateTo("/register");
	}

	protected override async Task OnInitializedAsync()
	{
		if(!string.IsNullOrEmpty(Name) && !string.IsNullOrEmpty(Password)) // login set through parameters
		{
			Password = new Encrypt().BurrowDecode(Password);
			mainLayout.SubmitLogonForm(new LoginAccount { Name = Name, Password = Password });
			while(mainLayout.JWT ==null && mainLayout.UserName==null)
				await Task.Delay(100);
			Name = Password = null;
			nav.NavigateTo("/account");
		}
		await base.OnInitializedAsync();
	}
}